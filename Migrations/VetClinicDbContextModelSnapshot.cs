// <auto-generated />
using System;
using BlazorVetClinicPractise1.DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorVetClinicPractise1.Migrations
{
    [DbContext(typeof(VetClinicDbContext))]
    partial class VetClinicDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlazorVetClinicPractise1.DataLayer.AnimalPassport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("AnimalType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnimalPassports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 11,
                            AnimalType = "Dog",
                            Breed = "SomeBreed",
                            Gender = "Male",
                            Name = "A Dog"
                        });
                });

            modelBuilder.Entity("BlazorVetClinicPractise1.DataLayer.Vaccination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalPassportId")
                        .HasColumnType("int");

                    b.Property<DateTime>("VaccinationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VaccineRegistryEntryId")
                        .HasColumnType("int");

                    b.Property<int>("VeterinarianId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnimalPassportId");

                    b.HasIndex("VaccineRegistryEntryId");

                    b.HasIndex("VeterinarianId");

                    b.ToTable("Vaccinations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnimalPassportId = 1,
                            VaccinationDate = new DateTime(2023, 12, 31, 14, 52, 39, 802, DateTimeKind.Utc).AddTicks(5024),
                            VaccineRegistryEntryId = 1,
                            VeterinarianId = 1
                        });
                });

            modelBuilder.Entity("BlazorVetClinicPractise1.DataLayer.VaccineRegistry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VaccineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VaccineRegistryEntries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExpiryDate = new DateTime(2024, 12, 31, 14, 52, 39, 802, DateTimeKind.Utc).AddTicks(4989),
                            SerialNumber = "12345",
                            VaccineName = "Vaccine1"
                        });
                });

            modelBuilder.Entity("BlazorVetClinicPractise1.DataLayer.Veterinarian", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Veterinarians");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Luke",
                            LastName = "Vader",
                            SocialNumber = "12345"
                        });
                });

            modelBuilder.Entity("BlazorVetClinicPractise1.DataLayer.Vaccination", b =>
                {
                    b.HasOne("BlazorVetClinicPractise1.DataLayer.AnimalPassport", "AnimalPassport")
                        .WithMany("Vaccinations")
                        .HasForeignKey("AnimalPassportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorVetClinicPractise1.DataLayer.VaccineRegistry", "VaccineRegistryEntry")
                        .WithMany("Vaccinations")
                        .HasForeignKey("VaccineRegistryEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorVetClinicPractise1.DataLayer.Veterinarian", "Veterinarian")
                        .WithMany("Vaccinations")
                        .HasForeignKey("VeterinarianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnimalPassport");

                    b.Navigation("VaccineRegistryEntry");

                    b.Navigation("Veterinarian");
                });

            modelBuilder.Entity("BlazorVetClinicPractise1.DataLayer.AnimalPassport", b =>
                {
                    b.Navigation("Vaccinations");
                });

            modelBuilder.Entity("BlazorVetClinicPractise1.DataLayer.VaccineRegistry", b =>
                {
                    b.Navigation("Vaccinations");
                });

            modelBuilder.Entity("BlazorVetClinicPractise1.DataLayer.Veterinarian", b =>
                {
                    b.Navigation("Vaccinations");
                });
#pragma warning restore 612, 618
        }
    }
}
